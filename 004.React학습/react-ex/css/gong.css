@charset "utf-8";
/* 01.공유신발 CSS - gong.css */
body{
    overflow-y: scroll;
    /* 스크롤이 없어도 스크롤바 트랙이 나와 있어서
    새로 스크롤바 트랙 생성시 화면이 약간 옆으로 움직이는
    문제를 막아준다! */
}
/* 대상박스 */
#root {
    width: 700px;
    padding: 20px;
    border: 1px dashed darkblue;
    border-radius: 20px;
    margin: 0 auto;
    text-align: center;
}
/* 제목 */
.tit {
    color: orangered;
}
/* 내용박스 */
#root section {
    border: 4px double gray;
}
/* 내용박스 이미지 */
#root section img {
    width: 80%;
    border-radius: 20px;
}

/* 상품리스트박스 */
.gwrap {
    display: flex;
    /* 하위 ol박스를 옆으로 흐르게함 */
    justify-content: center;
    flex-wrap: wrap;
    padding-top: 20px;

    gap: 10px 20px; /* 상하 좌우 사이간격 */
}
/* 개별리스트박스 */
.glist {
    margin: 0;
    padding: 0;
    list-style: none;
}
/* 상품이미지 */
.glist img {
    width: 120px;


   
}

/* <script>
// 제이쿼리 구역 /////
$(() => {
    // 1. 드래그대상
    const dg = $(".draggable");

    // 2. 드래그설정
    // draggable() 메서드 호출만으로 드래그이동이 가능함!
    // {}객체값으로 드래그 옵션 셋팅!
    dg.draggable({
        cursor: "move", // 커서모양 "이동중"표시
        stack: ".draggable", // 드래그대상 상위처리
        opacity: 0.7, // 이동중 투명도
    });

    // [ 커스터마이징 요구사항 반영하기 ]
    // 1. 드래그시 포스트잍 이미지 변경하기

    // (1) 드래그 시작이벤트 발생시 이미지변경위해
    // 클래스 .invert 넣기
    // 드래그 시작이벤트: dragstart
    // 제이쿼리 메서드 : on(이벤트명,함수)
    dg.on("dragstart", function () {
        // 드래그되는 나 자신-> this
        $(this).addClass("invert");
    }); ///////// dragstart /////////////

    // (2) 드래그 끝날때 이벤트 발생시 이미지변경위해
    // 클래스 .invert 빼기
    // 드래그 종료이벤트: dragstop
    // 제이쿼리 메서드 : on(이벤트명,함수)
    dg.on("dragstop", function () {
        // 드래그되는 나 자신-> this
        $(this).removeClass("invert");
    }); ///////// dragstart /////////////

    // 2. 드롭대상박스에 드롭될때 동영상 보여주기
    // droppable() 메서드 : 드롭되는 요소처리
    // 이벤트대상 : .dropshow

    $(".dropshow").droppable({
        drop: function (evt, ele) {
            // evt-이벤트전달변수,ele-드롭관련객체
            // console.log("나,빠졌다~~!");

            // 1. 드롭된 요소의 이미지 src속성을 읽어옴
            // 드롭된 요소 -> ele.draggable
            let isrc = ele.draggable.find("img").attr("src");
            // console.log(isrc);

            // 2. 드롭영역의 배경이미지 변경하기
            // this - 드롭박스
            $(this).css({
                backgroundImage: `url(${isrc})`,
            }); ////// css ////////

            // 3. 드롭된 요소 사라지기
            // ele.draggable -> 드롭된요소($()사용하지않음!)
            ele.draggable.hide();

            // 4. 드롭된 요소의 자식 p태그의 글자 읽어오기
            let dtxt = ele.draggable.find("p").text();
            // console.log(dtxt);

            // 5. 드롭영역에 글자넣기
            $(this).text(dtxt + " 당첨~!!!");

            // 6. 유튜브 동영상 박스 넣기
            $("body").append(`
            <div id="mbox">
                <a href="#">×</a>
            </div>
        `);

            // 동영상 박스요소를 변수에 할당!
            let mbox = $("#mbox");

            // 7. 동영상 박스 CSS 셋팅하기
            mbox.css({
                position: "fixed",
                top: "0",
                left: "0",
                width: "100%",
                height: "100%",
                zIndex: "999",
                backgroundColor: "#000",
            }); /////// css /////////

            // 8. 동영상 박스에 유튜브 iframe 넣기 ////

            // 드롭된 요소의 동영상 아이디 정보(data-mv)읽어오기
            let mv = ele.draggable.attr("data-mv");
            console.log("동영상코드:", mv);

            // 아이프레임 넣기 ///
            mbox.append(
                `
            <iframe src="https://www.youtube.com/embed/${mv}?autoplay=1" allow="autoplay" style="width:100%;height:100%;border:none"></iframe>
        `
            )
                // 9. 동영상박스 숨기고 1초후 slideDown으로 보이기
                .hide()
                .delay(1000)
                .slideDown(2000);

            // 10. 닫기버튼 셋팅 및 클릭시 동영상 닫기
            mbox.find("a")
                .css({
                    position: "absolute",
                    top: "50px",
                    right: "50px",
                    width: "50px",
                    height: "50px",
                    textDecoration: "none",
                    font: "bold 48px Verdana",
                    color: "#fff",
                    textShadow: "0 0 5px #777",
                }) /////// css ///////
                .click(function () {
                    // 닫기버튼 클릭시

                    // 1. #mbox 닫기
                    mbox.slideUp(1000, function () {
                        // 2. 자기자신 (this===mbox) 없애기
                        $(this).remove(); // 태그제거!

                        // 3. 드롭된 요소 다시 보이기
                        // 동시에 자기원래 위치로 돌아가기
                        ele.draggable.show().css({
                            top: "0",
                            left: "0",
                        }); //// css ////

                        // 4. 드롭박스 초기화
                        $(".dropshow")
                        .text("여기에 드롭하세요~~!")
                        .css({
                            backgroundImage: "url(addimg/effect2.jpg)",
                        }); ///////// css ///////
                    }); ///////// slideUp ///////
                });
        }, /////// drop 이벤트 처리 함수 /////
    }); ///////////// droppable //////////////
}); //////////// jQB ///////////////////////////
</script> */
