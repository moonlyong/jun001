@charset "UTF-8";
/**************************************************** 
                    [ 그리드 디스플레이 ]

        - 가로,세로 양방향 레이아웃을 위한 디스플레이 속성
        - 주요 속성:
        1. grid-template-colums
            - 가로방향 width폭을 지정하는 속성
            - 값은 순서대로 값을씀 (개수만큼 한줄 컬럼결정)
            - 반복을 사용할 수 있다
                -> repeat(개수,설정값)
            - 설정값: px,%,vw,rem 등 구체적인값
                또는 비율값 -> 숫자fr (가로크기 전체의 비율)
                fr은 fraction에서 나온말
                예) 1fr 2fr -> 1:2비율 
        2. grid-template-rows
            - 세로방향의 height값을 지정하는 속성
            - 값은 순서대로 값을씀
            - 나머지는 1번과 동일
            - 만약 이 값을 설정하지 않으면 모든 박스에 대한
            기본비를 유지함!(내가 원하는 비는 별도로 설정함)
            -> 기본비에 대한 기준은 내부컨텐츠임
            (이미지라면 이미지 기본비를 기준함)
            
        3. grid-column-gap
            - 가로방향 사이간격
        
        4. grid-row-gap
            - 세로방향 사이간격
        ________________________________
        
        5.  가로정렬, 세로정렬은 flex와 개념상 동일하다! 
        - 한줄일때 (진행방에 여러개있을 경우)
        justify-content -> 가로진행방향 정렬
        align-content -> 세로진행방향 정렬
        - 여러줄일때
        justify-items -> 가로방향 다중 정렬 (flex에 없음!)
        align-items -> 세로방향 다중 정렬

        ___________________________________

        그리드 사용 예시 사이트: 매치 리스트
        https://www.matchroomboxing.com/

    ****************************************************/
    .tit{
        text-align: center;
        font-size: max(3vw,25px);
    }

    .grid img{
        width: 100%;
        height: 100%;
        /* 박스 이미지 하단 공백제거 */
        vertical-align: middle;
    }
    /* 그리드 박스 */
    .grid{
        display: grid;
        max-width: 1200px;
        margin: 0 auto;
        outline: 2px dashed lightcoral;

        /* 가로 그리드 템플릿
            grid-template-columns = gtc */
        /* grid-template-columns: 100px 200px 300px 400px; */
        /* fr단위 가로전체 등분할 */
        /* grid-template-columns: 1fr 1fr 1fr 1fr 2fr; */
        /* grid-template-columns: repeat(2,1fr 2fr 3fr); 
        (분할수, 수치 수치 수치) */
        grid-template-columns: repeat(5,1fr);

        /* 세로 그리드 템플릿
            grid-template-rows */
            /* grid-template-rows: 100px 200px 300px; 3줄만 나머지 auto */
            /* grid-template-rows: 1fr 2fr; */
            /* grid-template-rows: repeat(2,1fr 1.2fr); */
            /* grid-auto-rows: 400px; */

            /* 수평방향 간격

            */
            grid-column-gap: 10px;
            grid-row-gap: 15px;
    }
    .grid>div{position: relative;
        aspect-ratio: 175/250;
    }
    .grid>div>aside{
        position: absolute;
        bottom: 0;
        width: 100%;
        text-align: center;
        color: #fff;
        background-color: #00000050;
        font-size: min(1.2vw,12px);
    }

    @media screen and (max-width:1200px) {
        .grid{
            grid-template-columns: repeat(4,1fr);
        }
        /* .grid3{
            grid-column: 3/5;
            grid-row: 1/3;
        } */
    }

    @media screen and (max-width:800px) {
        .grid{
            grid-template-columns: repeat(3,1fr);
        }
    }   
    @media screen and (max-width:600px) {
        .grid{
            grid-template-columns: repeat(2,1fr);
        }
    }


    /* .grid>div:first-child{
        grid-column: x/x+n; 가로
        grid-row: y/y+n; 세로
    } */
    .grid3{
        grid-column: 4/6;
        grid-row: 1/3;
    }
    /************************************* 
        
            [ 그리드 위치 영역 속성 ]

            1. 가로방향 위치속성
                grid-column : 시작위치번호 / 끝위치번호;

            2. 세로방향 위치속성
                grid-row : 시작위치번호 / 끝위치번호;

            -> 각 위치값은 그리드 기준선 번호를 참고함
            (브라우저에서 그리드 소스 버튼을 클릭하여
            볼 수 있음!)

            >>>>> 셋팅시 유의사항 <<<<<<<
            - grid-column 을 설정할때 만약 그리드범위에
            넘치면 자동으로 아랫줄로 떨어진다!
            그러므로 grid-row를 따로 잡아줄 필요가 없다!
            단, 별도의 위치를 세로방향으로 변경해야할 경우
            grid-row를 설정해야 한다!
        
        *************************************/